version: "2"

services:
  mongo:
    image: mongo:latest
    labels:
      NAME: "mongo"
    hostname: "mongo"
    container_name: mongo   
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
    volumes: 
      - ./mongoData:/data/db
  
  solr:
    image: solr
    labels:
      NAME: "solr"
    hostname: "solr"
    container_name: solr    
    ports:
     - "9983:9983"
     - "8983:8983"
    # volumes:
    #   - data:/opt/solr/server/solr/mycores
    entrypoint:
      - docker-entrypoint.sh
      - solr
      - start
      - -c
      - -f

  web-app:
    build: server/.
    #working_dir: /
    labels:
      NAME: "nodeApp"
    hostname: "nodeApp"
    container_name: nodeApp
    image: node-server-app:1.0
    # entrypoint: ./wait-for-it.sh mongo:27017 solr:9983 -t 120 --
    ports:
      - "8080:5000"
    environment:
      - SOLR_HOST=solr
      - MONGODB_HOST=mongo
    links:
      - mongo
      - solr
    depends_on:
      - mongo
      - solr   
      
  frontend-app:
    build: client/.
    labels:
      NAME: "reactApp"
    hostname: "reactApp"
    container_name: reactApp
    image: react-server-app:1.0
    ports:
      - "8090:3000"
    links:
      - mongo
      - solr
    depends_on:
      - mongo
      - solr

  lb-app:
    build: nginx/.
    labels:
      NAME: "nginx"
    hostname: "nginx"
    container_name: nginx
    image: nginx-app:1.0
    ports:
      - "80:80"
    links:
      - mongo
      - solr
    depends_on:
      - mongo
      - solr

  # mongo-express :
  #   image : mongo-express
  #   ports :
  #     - "8081:8081"
  #   environment :
  #     - ME_CONFIG_BASICAUTH_USERNAME=root
  #     - ME_CONFIG_BASICAUTH_PASSWORD=example
  #     - ME_CONFIG_MONGODB_PORT=27017
  #     - ME_CONFIG_MONGODB_ADMINUSERNAME=root
  #     - ME_CONFIG_MONGODB_ADMINPASSWORD=MongoDB2019!
  #   links :
  #     - mongo
  #   depends_on: 
  #     - mongo